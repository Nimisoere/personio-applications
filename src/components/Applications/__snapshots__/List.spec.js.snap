// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components Applications List should render 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ApplicationsList
    data={Object {}}
    error={Object {}}
    fetching={false}
    loadData={[MockFunction]}
    match=""
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Row
          tag="div"
        >
          <Col
            sm="6"
            tag="div"
            widths={
              Array [
                "xs",
                "sm",
                "md",
                "lg",
                "xl",
              ]
            }
          >
            <h5
              className="item-count"
            >
               Result(s) Found
            </h5>
          </Col>
          <Col
            sm="6"
            tag="div"
            widths={
              Array [
                "xs",
                "sm",
                "md",
                "lg",
                "xl",
              ]
            }
          >
            <div
              className="text-right"
            >
              <Button
                className="btn btn-primary btn-outline"
                color="secondary"
                disabled={false}
                onClick={[MockFunction]}
                tag="button"
              >
                <span>
                  <MdAutorenew
                    size={20}
                  />
                   Refresh
                </span>
              </Button>
            </div>
          </Col>
        </Row>,
        <hr />,
        <Alert
          closeAriaLabel="Close"
          color="danger"
          fade={true}
          isOpen={true}
          tag="div"
          transition={
            Object {
              "appear": true,
              "baseClass": "fade",
              "baseClassActive": "show",
              "enter": true,
              "exit": true,
              "in": true,
              "mountOnEnter": false,
              "onEnter": [Function],
              "onEntered": [Function],
              "onEntering": [Function],
              "onExit": [Function],
              "onExited": [Function],
              "onExiting": [Function],
              "tag": "div",
              "timeout": 150,
              "unmountOnExit": true,
            }
          }
        >
          The data displayed below might be outdated. Click 'Refresh' to update.
        </Alert>,
        <DataTable />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <Col
              sm="6"
              tag="div"
              widths={
                Array [
                  "xs",
                  "sm",
                  "md",
                  "lg",
                  "xl",
                ]
              }
            >
              <h5
                className="item-count"
              >
                 Result(s) Found
              </h5>
            </Col>,
            <Col
              sm="6"
              tag="div"
              widths={
                Array [
                  "xs",
                  "sm",
                  "md",
                  "lg",
                  "xl",
                ]
              }
            >
              <div
                className="text-right"
              >
                <Button
                  className="btn btn-primary btn-outline"
                  color="secondary"
                  disabled={false}
                  onClick={[MockFunction]}
                  tag="button"
                >
                  <span>
                    <MdAutorenew
                      size={20}
                    />
                     Refresh
                  </span>
                </Button>
              </div>
            </Col>,
          ],
          "tag": "div",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <h5
                className="item-count"
              >
                 Result(s) Found
              </h5>,
              "sm": "6",
              "tag": "div",
              "widths": Array [
                "xs",
                "sm",
                "md",
                "lg",
                "xl",
              ],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  undefined,
                  " Result(s) Found",
                ],
                "className": "item-count",
              },
              "ref": null,
              "rendered": Array [
                undefined,
                " Result(s) Found",
              ],
              "type": "h5",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <div
                className="text-right"
              >
                <Button
                  className="btn btn-primary btn-outline"
                  color="secondary"
                  disabled={false}
                  onClick={[MockFunction]}
                  tag="button"
                >
                  <span>
                    <MdAutorenew
                      size={20}
                    />
                     Refresh
                  </span>
                </Button>
              </div>,
              "sm": "6",
              "tag": "div",
              "widths": Array [
                "xs",
                "sm",
                "md",
                "lg",
                "xl",
              ],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Button
                  className="btn btn-primary btn-outline"
                  color="secondary"
                  disabled={false}
                  onClick={[MockFunction]}
                  tag="button"
                >
                  <span>
                    <MdAutorenew
                      size={20}
                    />
                     Refresh
                  </span>
                </Button>,
                "className": "text-right",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <span>
                    <MdAutorenew
                      size={20}
                    />
                     Refresh
                  </span>,
                  "className": "btn btn-primary btn-outline",
                  "color": "secondary",
                  "disabled": false,
                  "onClick": [MockFunction],
                  "tag": "button",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <MdAutorenew
                        size={20}
                      />,
                      " Refresh",
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "size": 20,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    " Refresh",
                  ],
                  "type": "span",
                },
                "type": [Function],
              },
              "type": "div",
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "hr",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": "The data displayed below might be outdated. Click 'Refresh' to update.",
          "closeAriaLabel": "Close",
          "color": "danger",
          "fade": true,
          "isOpen": true,
          "tag": "div",
          "transition": Object {
            "appear": true,
            "baseClass": "fade",
            "baseClassActive": "show",
            "enter": true,
            "exit": true,
            "in": true,
            "mountOnEnter": false,
            "onEnter": [Function],
            "onEntered": [Function],
            "onEntering": [Function],
            "onExit": [Function],
            "onExited": [Function],
            "onExiting": [Function],
            "tag": "div",
            "timeout": 150,
            "unmountOnExit": true,
          },
        },
        "ref": null,
        "rendered": "The data displayed below might be outdated. Click 'Refresh' to update.",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Row
            tag="div"
          >
            <Col
              sm="6"
              tag="div"
              widths={
                Array [
                  "xs",
                  "sm",
                  "md",
                  "lg",
                  "xl",
                ]
              }
            >
              <h5
                className="item-count"
              >
                 Result(s) Found
              </h5>
            </Col>
            <Col
              sm="6"
              tag="div"
              widths={
                Array [
                  "xs",
                  "sm",
                  "md",
                  "lg",
                  "xl",
                ]
              }
            >
              <div
                className="text-right"
              >
                <Button
                  className="btn btn-primary btn-outline"
                  color="secondary"
                  disabled={false}
                  onClick={[MockFunction]}
                  tag="button"
                >
                  <span>
                    <MdAutorenew
                      size={20}
                    />
                     Refresh
                  </span>
                </Button>
              </div>
            </Col>
          </Row>,
          <hr />,
          <Alert
            closeAriaLabel="Close"
            color="danger"
            fade={true}
            isOpen={true}
            tag="div"
            transition={
              Object {
                "appear": true,
                "baseClass": "fade",
                "baseClassActive": "show",
                "enter": true,
                "exit": true,
                "in": true,
                "mountOnEnter": false,
                "onEnter": [Function],
                "onEntered": [Function],
                "onEntering": [Function],
                "onExit": [Function],
                "onExited": [Function],
                "onExiting": [Function],
                "tag": "div",
                "timeout": 150,
                "unmountOnExit": true,
              }
            }
          >
            The data displayed below might be outdated. Click 'Refresh' to update.
          </Alert>,
          <DataTable />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <Col
                sm="6"
                tag="div"
                widths={
                  Array [
                    "xs",
                    "sm",
                    "md",
                    "lg",
                    "xl",
                  ]
                }
              >
                <h5
                  className="item-count"
                >
                   Result(s) Found
                </h5>
              </Col>,
              <Col
                sm="6"
                tag="div"
                widths={
                  Array [
                    "xs",
                    "sm",
                    "md",
                    "lg",
                    "xl",
                  ]
                }
              >
                <div
                  className="text-right"
                >
                  <Button
                    className="btn btn-primary btn-outline"
                    color="secondary"
                    disabled={false}
                    onClick={[MockFunction]}
                    tag="button"
                  >
                    <span>
                      <MdAutorenew
                        size={20}
                      />
                       Refresh
                    </span>
                  </Button>
                </div>
              </Col>,
            ],
            "tag": "div",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <h5
                  className="item-count"
                >
                   Result(s) Found
                </h5>,
                "sm": "6",
                "tag": "div",
                "widths": Array [
                  "xs",
                  "sm",
                  "md",
                  "lg",
                  "xl",
                ],
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    undefined,
                    " Result(s) Found",
                  ],
                  "className": "item-count",
                },
                "ref": null,
                "rendered": Array [
                  undefined,
                  " Result(s) Found",
                ],
                "type": "h5",
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <div
                  className="text-right"
                >
                  <Button
                    className="btn btn-primary btn-outline"
                    color="secondary"
                    disabled={false}
                    onClick={[MockFunction]}
                    tag="button"
                  >
                    <span>
                      <MdAutorenew
                        size={20}
                      />
                       Refresh
                    </span>
                  </Button>
                </div>,
                "sm": "6",
                "tag": "div",
                "widths": Array [
                  "xs",
                  "sm",
                  "md",
                  "lg",
                  "xl",
                ],
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Button
                    className="btn btn-primary btn-outline"
                    color="secondary"
                    disabled={false}
                    onClick={[MockFunction]}
                    tag="button"
                  >
                    <span>
                      <MdAutorenew
                        size={20}
                      />
                       Refresh
                    </span>
                  </Button>,
                  "className": "text-right",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <span>
                      <MdAutorenew
                        size={20}
                      />
                       Refresh
                    </span>,
                    "className": "btn btn-primary btn-outline",
                    "color": "secondary",
                    "disabled": false,
                    "onClick": [MockFunction],
                    "tag": "button",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <MdAutorenew
                          size={20}
                        />,
                        " Refresh",
                      ],
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "size": 20,
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      " Refresh",
                    ],
                    "type": "span",
                  },
                  "type": [Function],
                },
                "type": "div",
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "hr",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": "The data displayed below might be outdated. Click 'Refresh' to update.",
            "closeAriaLabel": "Close",
            "color": "danger",
            "fade": true,
            "isOpen": true,
            "tag": "div",
            "transition": Object {
              "appear": true,
              "baseClass": "fade",
              "baseClassActive": "show",
              "enter": true,
              "exit": true,
              "in": true,
              "mountOnEnter": false,
              "onEnter": [Function],
              "onEntered": [Function],
              "onEntering": [Function],
              "onExit": [Function],
              "onExited": [Function],
              "onExiting": [Function],
              "tag": "div",
              "timeout": 150,
              "unmountOnExit": true,
            },
          },
          "ref": null,
          "rendered": "The data displayed below might be outdated. Click 'Refresh' to update.",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
