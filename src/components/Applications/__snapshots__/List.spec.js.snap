// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components Applications List should render 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ApplicationsList
    data={Object {}}
    error={Object {}}
    fetching={false}
    loadData={[MockFunction]}
    match=""
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <DataTable
        bordered={true}
        columns={
          Array [
            Object {
              "accessor": "id",
              "name": "User ID",
            },
            Object {
              "accessor": "name",
              "name": "Name",
            },
            Object {
              "accessor": "email",
              "name": "Email",
            },
            Object {
              "accessor": "birth_date",
              "name": "Date of Birth / Age",
            },
            Object {
              "accessor": "year_of_experience",
              "name": "Years of experience",
            },
            Object {
              "accessor": "position_applied",
              "name": "Position Applied",
            },
            Object {
              "accessor": "application_date",
              "name": "Application Date",
            },
            Object {
              "accessor": "status",
              "name": "Application Status",
            },
          ]
        }
        count={0}
        countName="Applications"
        data={Object {}}
        error={Object {}}
        hover={true}
        loadData={[MockFunction]}
        loading={false}
        responsive={true}
        striped={true}
      />,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "bordered": true,
        "columns": Array [
          Object {
            "accessor": "id",
            "name": "User ID",
          },
          Object {
            "accessor": "name",
            "name": "Name",
          },
          Object {
            "accessor": "email",
            "name": "Email",
          },
          Object {
            "accessor": "birth_date",
            "name": "Date of Birth / Age",
          },
          Object {
            "accessor": "year_of_experience",
            "name": "Years of experience",
          },
          Object {
            "accessor": "position_applied",
            "name": "Position Applied",
          },
          Object {
            "accessor": "application_date",
            "name": "Application Date",
          },
          Object {
            "accessor": "status",
            "name": "Application Status",
          },
        ],
        "count": 0,
        "countName": "Applications",
        "data": Object {},
        "error": Object {},
        "hover": true,
        "loadData": [MockFunction],
        "loading": false,
        "responsive": true,
        "striped": true,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <DataTable
          bordered={true}
          columns={
            Array [
              Object {
                "accessor": "id",
                "name": "User ID",
              },
              Object {
                "accessor": "name",
                "name": "Name",
              },
              Object {
                "accessor": "email",
                "name": "Email",
              },
              Object {
                "accessor": "birth_date",
                "name": "Date of Birth / Age",
              },
              Object {
                "accessor": "year_of_experience",
                "name": "Years of experience",
              },
              Object {
                "accessor": "position_applied",
                "name": "Position Applied",
              },
              Object {
                "accessor": "application_date",
                "name": "Application Date",
              },
              Object {
                "accessor": "status",
                "name": "Application Status",
              },
            ]
          }
          count={0}
          countName="Applications"
          data={Object {}}
          error={Object {}}
          hover={true}
          loadData={[MockFunction]}
          loading={false}
          responsive={true}
          striped={true}
        />,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "bordered": true,
          "columns": Array [
            Object {
              "accessor": "id",
              "name": "User ID",
            },
            Object {
              "accessor": "name",
              "name": "Name",
            },
            Object {
              "accessor": "email",
              "name": "Email",
            },
            Object {
              "accessor": "birth_date",
              "name": "Date of Birth / Age",
            },
            Object {
              "accessor": "year_of_experience",
              "name": "Years of experience",
            },
            Object {
              "accessor": "position_applied",
              "name": "Position Applied",
            },
            Object {
              "accessor": "application_date",
              "name": "Application Date",
            },
            Object {
              "accessor": "status",
              "name": "Application Status",
            },
          ],
          "count": 0,
          "countName": "Applications",
          "data": Object {},
          "error": Object {},
          "hover": true,
          "loadData": [MockFunction],
          "loading": false,
          "responsive": true,
          "striped": true,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
